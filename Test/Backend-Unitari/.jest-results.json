{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":10,"numPassedTests":93,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":10,"numTotalTests":93,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1748528384845,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Route: issue.js","GET /issues"],"duration":226,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js GET /issues dovrebbe restituire le segnalazioni con paginazione","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire le segnalazioni con paginazione"},{"ancestorTitles":["Route: issue.js","GET /issues"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js GET /issues dovrebbe gestire errori nella query","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire errori nella query"},{"ancestorTitles":["Route: issue.js","POST /issues"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js POST /issues dovrebbe creare una nuova segnalazione","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare una nuova segnalazione"},{"ancestorTitles":["Route: issue.js","POST /issues"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js POST /issues dovrebbe richiedere un id_client","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe richiedere un id_client"},{"ancestorTitles":["Route: issue.js","PUT /issues/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js PUT /issues/:id dovrebbe aggiornare una segnalazione esistente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare una segnalazione esistente"},{"ancestorTitles":["Route: issue.js","PUT /issues/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: issue.js PUT /issues/:id dovrebbe gestire errori nell'aggiornamento","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire errori nell'aggiornamento"}],"endTime":1748528401124,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/issue.test.js","startTime":1748528386815,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: categories.js","GET /categories/tree"],"duration":210,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories/tree dovrebbe restituire l'albero delle categorie con immagini","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire l'albero delle categorie con immagini"},{"ancestorTitles":["Route: categories.js","GET /categories/tree"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories/tree dovrebbe gestire gli errori nel recupero dell'albero delle categorie","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire gli errori nel recupero dell'albero delle categorie"},{"ancestorTitles":["Route: categories.js","GET /categories"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories dovrebbe restituire tutte le categorie con conteggio prodotti","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire tutte le categorie con conteggio prodotti"},{"ancestorTitles":["Route: categories.js","GET /categories"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories dovrebbe gestire gli errori nel recupero delle categorie","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire gli errori nel recupero delle categorie"},{"ancestorTitles":["Route: categories.js","GET /categories/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories/:id dovrebbe restituire una categoria specifica con immagine","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire una categoria specifica con immagine"},{"ancestorTitles":["Route: categories.js","GET /categories/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js GET /categories/:id dovrebbe restituire 404 se la categoria non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire 404 se la categoria non esiste"},{"ancestorTitles":["Route: categories.js","POST /categories"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js POST /categories dovrebbe creare una nuova categoria","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare una nuova categoria"},{"ancestorTitles":["Route: categories.js","POST /categories"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js POST /categories dovrebbe validare i campi obbligatori","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare i campi obbligatori"},{"ancestorTitles":["Route: categories.js","PUT /categories/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js PUT /categories/:id dovrebbe aggiornare una categoria esistente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare una categoria esistente"},{"ancestorTitles":["Route: categories.js","PUT /categories/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js PUT /categories/:id dovrebbe impedire a una categoria di essere padre di se stessa","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe impedire a una categoria di essere padre di se stessa"},{"ancestorTitles":["Route: categories.js","DELETE /categories/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js DELETE /categories/:id dovrebbe eliminare una categoria senza figli","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe eliminare una categoria senza figli"},{"ancestorTitles":["Route: categories.js","DELETE /categories/:id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: categories.js DELETE /categories/:id dovrebbe impedire l'eliminazione di una categoria con figli","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe impedire l'eliminazione di una categoria con figli"}],"endTime":1748528401310,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/categories.test.js","startTime":1748528386814,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: users.js","GET /users"],"duration":255,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users dovrebbe restituire la lista degli utenti come admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire la lista degli utenti come admin"},{"ancestorTitles":["Route: users.js","GET /users"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users dovrebbe negare l'accesso a utenti non admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe negare l'accesso a utenti non admin"},{"ancestorTitles":["Route: users.js","GET /users/artisans"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users/artisans dovrebbe restituire un artigiano specifico","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire un artigiano specifico"},{"ancestorTitles":["Route: users.js","GET /users/artisans"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users/artisans dovrebbe restituire 404 se l'artigiano non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire 404 se l'artigiano non esiste"},{"ancestorTitles":["Route: users.js","GET /users/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users/:id dovrebbe restituire un utente specifico per il proprietario","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire un utente specifico per il proprietario"},{"ancestorTitles":["Route: users.js","GET /users/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js GET /users/:id dovrebbe negare l'accesso a profili altrui per utenti non admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe negare l'accesso a profili altrui per utenti non admin"},{"ancestorTitles":["Route: users.js","POST /users"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js POST /users dovrebbe creare un nuovo utente come admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un nuovo utente come admin"},{"ancestorTitles":["Route: users.js","POST /users"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js POST /users dovrebbe validare l'email","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare l'email"},{"ancestorTitles":["Route: users.js","PUT /users/:id"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js PUT /users/:id dovrebbe aggiornare un utente se è il proprietario","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare un utente se è il proprietario"},{"ancestorTitles":["Route: users.js","PUT /users/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js PUT /users/:id non dovrebbe permettere il cambio di ruolo a utenti non admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"non dovrebbe permettere il cambio di ruolo a utenti non admin"},{"ancestorTitles":["Route: users.js","DELETE /users/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js DELETE /users/:id dovrebbe eliminare un utente come admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe eliminare un utente come admin"},{"ancestorTitles":["Route: users.js","DELETE /users/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: users.js DELETE /users/:id dovrebbe restituire 404 se l'utente non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire 404 se l'utente non esiste"}],"endTime":1748528401572,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/users.test.js","startTime":1748528386814,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: images.js","POST /images/upload/product"],"duration":205,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/product dovrebbe caricare immagini per un prodotto","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe caricare immagini per un prodotto"},{"ancestorTitles":["Route: images.js","POST /images/upload/product"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/product dovrebbe restituire errore se manca l'id del prodotto","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire errore se manca l'id del prodotto"},{"ancestorTitles":["Route: images.js","POST /images/upload/product"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/product dovrebbe restituire errore se non ci sono file","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire errore se non ci sono file"},{"ancestorTitles":["Route: images.js","POST /images/upload/category"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/category dovrebbe caricare un'immagine per una categoria","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe caricare un'immagine per una categoria"},{"ancestorTitles":["Route: images.js","POST /images/upload/profile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/profile dovrebbe caricare un'immagine profilo","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe caricare un'immagine profilo"},{"ancestorTitles":["Route: images.js","POST /images/upload/profile"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/profile dovrebbe restituire errore se manca il file","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire errore se manca il file"},{"ancestorTitles":["Route: images.js","POST /images/upload/banner"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js POST /images/upload/banner dovrebbe caricare un banner per un artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe caricare un banner per un artigiano"},{"ancestorTitles":["Route: images.js","DELETE /images/product/:productId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js DELETE /images/product/:productId dovrebbe eliminare immagini di un prodotto","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe eliminare immagini di un prodotto"},{"ancestorTitles":["Route: images.js","DELETE /images/product/:productId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: images.js DELETE /images/product/:productId dovrebbe restituire errore se mancano gli id delle immagini","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire errore se mancano gli id delle immagini"}],"endTime":1748528401727,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/images.test.js","startTime":1748528386816,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: auth.js","POST /auth/register"],"duration":72,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js POST /auth/register dovrebbe registrare un nuovo utente con successo","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe registrare un nuovo utente con successo"},{"ancestorTitles":["Route: auth.js","POST /auth/register"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js POST /auth/register dovrebbe gestire errori di email già registrata","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire errori di email già registrata"},{"ancestorTitles":["Route: auth.js","POST /auth/login"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js POST /auth/login dovrebbe effettuare il login con successo","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe effettuare il login con successo"},{"ancestorTitles":["Route: auth.js","POST /auth/login"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js POST /auth/login dovrebbe gestire credenziali non valide","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire credenziali non valide"},{"ancestorTitles":["Route: auth.js","GET /auth/profile"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js GET /auth/profile dovrebbe recuperare il profilo utente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe recuperare il profilo utente"},{"ancestorTitles":["Route: auth.js","GET /auth/profile"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: auth.js GET /auth/profile dovrebbe gestire utente non trovato","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire utente non trovato"}],"endTime":1748528402804,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/auth.test.js","startTime":1748528386813,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: address.js","GET /address/me"],"duration":69,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js GET /address/me dovrebbe restituire l'indirizzo dell'utente loggato","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire l'indirizzo dell'utente loggato"},{"ancestorTitles":["Route: address.js","GET /address/me"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js GET /address/me dovrebbe gestire il caso in cui l'utente non ha un indirizzo","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire il caso in cui l'utente non ha un indirizzo"},{"ancestorTitles":["Route: address.js","GET /address/me"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js GET /address/me dovrebbe gestire gli errori del database","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire gli errori del database"},{"ancestorTitles":["Route: address.js","POST /address"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js POST /address dovrebbe creare un nuovo indirizzo quando non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un nuovo indirizzo quando non esiste"},{"ancestorTitles":["Route: address.js","POST /address"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js POST /address dovrebbe aggiornare un indirizzo esistente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare un indirizzo esistente"},{"ancestorTitles":["Route: address.js","POST /address"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js POST /address dovrebbe validare i campi obbligatori","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare i campi obbligatori"},{"ancestorTitles":["Route: address.js","GET /address/user/:userId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js GET /address/user/:userId dovrebbe restituire l'indirizzo di un utente specifico (per admin)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire l'indirizzo di un utente specifico (per admin)"},{"ancestorTitles":["Route: address.js","GET /address/user/:userId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: address.js GET /address/user/:userId dovrebbe negare l'accesso agli utenti non autorizzati","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe negare l'accesso agli utenti non autorizzati"}],"endTime":1748528402810,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/address.test.js","startTime":1748528386911,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: products.js","GET /products"],"duration":122,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js GET /products dovrebbe restituire una lista di prodotti con paginazione","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire una lista di prodotti con paginazione"},{"ancestorTitles":["Route: products.js","GET /products"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js GET /products dovrebbe filtrare i prodotti in base ai parametri","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe filtrare i prodotti in base ai parametri"},{"ancestorTitles":["Route: products.js","GET /products/:id"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js GET /products/:id dovrebbe restituire un prodotto specifico con le sue immagini","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire un prodotto specifico con le sue immagini"},{"ancestorTitles":["Route: products.js","GET /products/:id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js GET /products/:id dovrebbe restituire 404 se il prodotto non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire 404 se il prodotto non esiste"},{"ancestorTitles":["Route: products.js","POST /products"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js POST /products dovrebbe creare un nuovo prodotto come artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un nuovo prodotto come artigiano"},{"ancestorTitles":["Route: products.js","POST /products"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js POST /products dovrebbe richiedere autenticazione e ruolo artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe richiedere autenticazione e ruolo artigiano"},{"ancestorTitles":["Route: products.js","POST /products"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js POST /products dovrebbe validare i campi obbligatori","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare i campi obbligatori"},{"ancestorTitles":["Route: products.js","DELETE /products/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js DELETE /products/:id dovrebbe eliminare un prodotto come artigiano proprietario","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe eliminare un prodotto come artigiano proprietario"},{"ancestorTitles":["Route: products.js","DELETE /products/:id"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: products.js DELETE /products/:id dovrebbe verificare che il prodotto appartenga all'artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe verificare che il prodotto appartenga all'artigiano"}],"endTime":1748528409248,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/products.test.js","startTime":1748528386996,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Base Test"],"duration":114,"failureDetails":[],"failureMessages":[],"fullName":"Base Test dovrebbe verificare che la configurazione di test funzioni correttamente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe verificare che la configurazione di test funzioni correttamente"},{"ancestorTitles":["Base Test"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Base Test dovrebbe supportare i mock con sinon","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe supportare i mock con sinon"},{"ancestorTitles":["Base Test"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Base Test dovrebbe supportare le asserzioni con chai","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe supportare le asserzioni con chai"}],"endTime":1748528409405,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/base.test.js","startTime":1748528387372,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: orders.js","GET /orders"],"duration":100,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders dovrebbe restituire tutti gli ordini per un admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire tutti gli ordini per un admin"},{"ancestorTitles":["Route: orders.js","GET /orders"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders dovrebbe restituire gli ordini di un cliente specifico","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire gli ordini di un cliente specifico"},{"ancestorTitles":["Route: orders.js","GET /orders"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders dovrebbe negare l'accesso se non autorizzato","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe negare l'accesso se non autorizzato"},{"ancestorTitles":["Route: orders.js","POST /orders"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js POST /orders dovrebbe creare un nuovo ordine","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un nuovo ordine"},{"ancestorTitles":["Route: orders.js","POST /orders"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js POST /orders dovrebbe validare i campi obbligatori","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare i campi obbligatori"},{"ancestorTitles":["Route: orders.js","POST /orders/checkout"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js POST /orders/checkout dovrebbe creare un ordine dal carrello","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un ordine dal carrello"},{"ancestorTitles":["Route: orders.js","POST /orders/checkout"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js POST /orders/checkout dovrebbe gestire un carrello vuoto","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire un carrello vuoto"},{"ancestorTitles":["Route: orders.js","PUT /orders/:orderId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js PUT /orders/:orderId dovrebbe aggiornare lo stato di un ordine come admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare lo stato di un ordine come admin"},{"ancestorTitles":["Route: orders.js","PUT /orders/:orderId"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js PUT /orders/:orderId dovrebbe validare la transizione di stato","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare la transizione di stato"},{"ancestorTitles":["Route: orders.js","GET /orders/by-artisan/:artisanId"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders/by-artisan/:artisanId dovrebbe restituire gli ordini per un artigiano specifico","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire gli ordini per un artigiano specifico"},{"ancestorTitles":["Route: orders.js","GET /orders/by-artisan/:artisanId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders/by-artisan/:artisanId dovrebbe validare l'ID artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare l'ID artigiano"},{"ancestorTitles":["Route: orders.js","GET /orders/:orderId/items"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js GET /orders/:orderId/items dovrebbe restituire gli item di un ordine specifico","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire gli item di un ordine specifico"},{"ancestorTitles":["Route: orders.js","DELETE /orders/:orderId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js DELETE /orders/:orderId dovrebbe eliminare un ordine come admin","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe eliminare un ordine come admin"},{"ancestorTitles":["Route: orders.js","DELETE /orders/:orderId"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js DELETE /orders/:orderId dovrebbe verificare i permessi per un artigiano","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe verificare i permessi per un artigiano"},{"ancestorTitles":["Route: orders.js","POST /orders/create-payment-intent"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: orders.js POST /orders/create-payment-intent dovrebbe creare una payment intent per un checkout","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare una payment intent per un checkout"}],"endTime":1748528409938,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/orders.test.js","startTime":1748528388524,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Route: cart.js","POST /"],"duration":102,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST / dovrebbe creare un nuovo carrello se non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe creare un nuovo carrello se non esiste"},{"ancestorTitles":["Route: cart.js","POST /"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST / dovrebbe riconoscere un carrello già esistente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe riconoscere un carrello già esistente"},{"ancestorTitles":["Route: cart.js","POST /"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST / dovrebbe gestire errori del database","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire errori del database"},{"ancestorTitles":["Route: cart.js","POST /items"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST /items dovrebbe aggiungere un prodotto al carrello esistente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiungere un prodotto al carrello esistente"},{"ancestorTitles":["Route: cart.js","POST /items"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST /items dovrebbe aggiornare la quantità di un prodotto già presente","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare la quantità di un prodotto già presente"},{"ancestorTitles":["Route: cart.js","POST /items"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js POST /items dovrebbe validare i dati in input","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare i dati in input"},{"ancestorTitles":["Route: cart.js","GET /"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js GET / dovrebbe restituire il carrello vuoto se non esiste","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire il carrello vuoto se non esiste"},{"ancestorTitles":["Route: cart.js","GET /"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js GET / dovrebbe restituire i prodotti nel carrello con immagini","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe restituire i prodotti nel carrello con immagini"},{"ancestorTitles":["Route: cart.js","PUT /items/:item_id"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js PUT /items/:item_id dovrebbe aggiornare la quantità di un prodotto nel carrello","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe aggiornare la quantità di un prodotto nel carrello"},{"ancestorTitles":["Route: cart.js","PUT /items/:item_id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js PUT /items/:item_id dovrebbe validare la quantità","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe validare la quantità"},{"ancestorTitles":["Route: cart.js","DELETE /items/:item_id"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js DELETE /items/:item_id dovrebbe rimuovere un prodotto dal carrello","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe rimuovere un prodotto dal carrello"},{"ancestorTitles":["Route: cart.js","DELETE /"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js DELETE / dovrebbe svuotare il carrello","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe svuotare il carrello"},{"ancestorTitles":["Route: cart.js","DELETE /"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Route: cart.js DELETE / dovrebbe gestire il caso di carrello già vuoto","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"dovrebbe gestire il caso di carrello già vuoto"}],"endTime":1748528413040,"message":"","name":"/usr/src/app/Test/Backend-Unitari/tests/routes/cart.test.js","startTime":1748528389427,"status":"passed","summary":""}],"wasInterrupted":false}
