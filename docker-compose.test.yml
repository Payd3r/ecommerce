services:
  db-test:
    image: mariadb:11
    container_name: mariadb-db-test
    environment:
      MYSQL_ROOT_PASSWORD: test_password
      MYSQL_DATABASE: ecommerce_test
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
    ports:
      - "3307:3306"
    volumes:
      - ./Backend/db.sql:/docker-entrypoint-initdb.d/db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "test_user", "-ptest_password"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend-test:
    build: ./Backend
    container_name: node-backend-test
    ports:
      - "3016:3015"
    depends_on:
      db-test:
        condition: service_healthy
    environment:
      PORT: 3015
      DB_HOST: db-test
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_NAME: ecommerce_test
      DB_PORT: 3306
      JWT_SECRET: test_secret_key
      NODE_ENV: test
    command: npm start

  frontend-test:
    build: ./Frontend
    container_name: node-frontend-test
    ports:
      - "3011:80"
    depends_on:
      - backend-test

  test-runner:
    build:
      context: ./Test
      dockerfile: Dockerfile
    container_name: test-runner
    depends_on:
      - db-test
      - backend-test
      - frontend-test
    environment:
      DB_HOST: db-test
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_NAME: ecommerce_test
      DB_PORT: 3306
      JWT_SECRET: test_secret_key
      BACKEND_URL: http://backend-test:3015
      FRONTEND_URL: http://frontend-test:80
      NODE_ENV: test
    volumes:
      - ./Test:/app/Test
      - ./reports:/app/Test/reports
      - /app/Test/node_modules
    # Non specifichiamo un comando qui, usiamo l'ENTRYPOINT dal Dockerfile 