version: '3.8'

services:
  # Database per i test
  test-db:
    image: mariadb:10.6
    container_name: test-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecommerce_test
      MYSQL_USER: ecommerce
      MYSQL_PASSWORD: ecommerce
    ports:
      - "3016:3016"
    volumes:
      - mariadb-test-data:/var/lib/mysql
    networks:
      - ecommerce_default
    # Utilizzo tmpfs per i log per ridurre I/O
    tmpfs:
      - /tmp
      - /var/log

  # Backend per i test
  backend-test:
    build:
      context: .
      dockerfile: Backend/Dockerfile
    environment:
      NODE_ENV: test
      DB_HOST: mariadb-test-db
      DB_PORT: 3016
      DB_USER: ecommerce
      DB_PASSWORD: ecommerce
      DB_NAME: ecommerce_test
      JWT_SECRET: test_secret
      PORT: 3017
    ports:
      - "3017:3017"
    depends_on:
      - mariadb-test-db
    networks:
      - ecommerce_default
    volumes:
      - ./Backend:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

  # Container per test unitari
  test-unitari:
    build:
      context: .
      dockerfile: Test/Backend-Unitari/Dockerfile
    environment:
      NODE_ENV: test
      DB_HOST: mariadb-test-db
      DB_PORT: 3016
      DB_USER: ecommerce
      DB_PASSWORD: ecommerce
      DB_NAME: ecommerce_test
    depends_on:
      - mariadb-test-db
      - backend-test
    networks:
      - ecommerce_default
    volumes:
      - ./Test/Backend-Unitari:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

  # Container per test integrativi
  test-integrativi:
    build:
      context: .
      dockerfile: Test/Backend-Integrativi/Dockerfile
    environment:
      NODE_ENV: test
      DB_HOST: mariadb-test-db
      DB_PORT: 3016
      DB_USER: ecommerce
      DB_PASSWORD: ecommerce
      DB_NAME: ecommerce_test
    depends_on:
      - mariadb-test-db
      - backend-test
    networks:
      - ecommerce_default
    volumes:
      - ./Test/Backend-Integrativi:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

  # Container per test frontend
  test-frontend:
    build:
      context: .
      dockerfile: Test/Frontend/Dockerfile
    environment:
      NODE_ENV: test
    depends_on:
      - backend-test
    networks:
      - ecommerce_default
    volumes:
      - ./Test/Frontend:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

  # Container per test performance
  test-performance:
    build:
      context: .
      dockerfile: Test/Performance/Dockerfile
    environment:
      NODE_ENV: test
    depends_on:
      - backend-test
    networks:
      - ecommerce_default
    volumes:
      - ./Test/Performance:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

  # Container per il monitoring
  monitoring-test:
    build:
      context: ./Monitoring
      dockerfile: Dockerfile
    environment:
      NODE_ENV: test
    ports:
      - "3012:3012"
    depends_on:
      - backend-test
    networks:
      - ecommerce_default
    volumes:
      - ./Monitoring:/usr/src/app
      - /usr/src/app/node_modules
      - test-reports:/usr/src/app/Test/Output

networks:
  ecommerce_default:
    driver: bridge

volumes:
  mariadb-test-data:
  test-reports: